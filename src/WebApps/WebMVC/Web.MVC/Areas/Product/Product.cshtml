@using SooduskorvWebMVC.Components
@model Catalog.Pages.Catalog.CatalogPage

@{       
    var page = Model.PageUrl; }

<table class="table">
    <thead>
        
            Html.DisplayNameFor(m => m.Item.Name), Model.GetSortString(m => m.Name, page),
            Html.DisplayNameFor(m => m.Item.Description), Model.GetSortString(m => m.Description, page)
            Html.DisplayNameFor(m => m.Item.ValidFrom), Model.GetSortString(m => m.ValidFrom, page)
           Html.DisplayNameFor(m => m.Item.ValidTo), Model.GetSortString(m => m.ValidTo, page)
            )

    </thead>
    <tbody>
        @foreach (var item in Model.Items)
        {
            const string selectedRow = "";
            <tr class=@selectedRow>
               
                    false,
                    page,
                    item.GetId(),
                    Model.SortOrder,
                    Model.SearchString,
                    Model.PageIndex,
                    Model.FixedFilter,
                    Model.FixedValue,
                    Html.DisplayFor(modelItem => item.Name),
                    Html.DisplayFor(modelItem => item.Description),
                    Html.DisplayFor(modelItem => item.ValidFrom),
                    Html.DisplayFor(modelItem => item.ValidTo)
                    )
            </tr>
        }
    </tbody>
</table>
<hr />
@* Counter = ICommonRender<T> => Ienum<ICommon> *@
@(await Html.RenderComponentAsync<Counter>(RenderMode.ServerPrerendered))
@*@(await Html.RenderComponentAsync<Counter>(RenderMode.ServerPrerendered))
    @(await Html.RenderComponentAsync<Counter>(RenderMode.ServerPrerendered))
    @(await Html.RenderComponentAsync<Counter>(RenderMode.ServerPrerendered))
    @(await Html.RenderComponentAsync<Counter>(RenderMode.ServerPrerendered))
    @(await Html.RenderComponentAsync<Counter>(RenderMode.ServerPrerendered))
    @(await Html.RenderComponentAsync<Counter>(RenderMode.ServerPrerendered))*@

@section Scripts {
    <script src="_framework/blazor.server.js"></script>
}