@page
@using Catalog.Pages.Common.Aids
@using Catalog.Pages.Common.Consts
@using Catalog.Pages.Common.Extensions
@model Catalog.Pages.Catalog.CatalogEntryPage

@{
    Layout = "_Index";
    var page = Model.PageUrl;
}

@section Create {
    @Html.Link(string.Empty, new Link(Captions.Create, Model.CreateUrl))
}

<body>
    <table class="table">
        <thead>
            @Html.Header(
                new Link(Html.DisplayNameFor(m => m.Item.CatalogId), Model.GetSortString(m => m.CatalogId, page)),
                new Link(Html.DisplayNameFor(m => m.Item.CategoryId), Model.GetSortString(m => m.CategoryId, page)),
                new Link(Html.DisplayNameFor(m => m.Item.ValidFrom), Model.GetSortString(m => m.ValidFrom, page)),
                new Link(Html.DisplayNameFor(m => m.Item.ValidTo), Model.GetSortString(m => m.ValidTo, page))
                )

        </thead>
        <tbody>
            @foreach (var item in Model.Items)
            {
                const string selectedRow = "";
                <tr class=@selectedRow>
                    @Html.Row(
                        false,
                        page,
                        item.GetId(),
                        Model.SortOrder,
                        Model.SearchString,
                        Model.PageIndex,
                        Model.FixedFilter,
                        Model.FixedValue,                     
                        Html.Raw(Model.CatalogName(item.CatalogId)),
                        Html.Raw(Model.CategoryName(item.CategoryId)),
                        Html.DisplayFor(modelItem => item.ValidFrom),
                        Html.DisplayFor(modelItem => item.ValidTo)
                        )
                </tr>
            }
        </tbody>
    </table>
</body>
