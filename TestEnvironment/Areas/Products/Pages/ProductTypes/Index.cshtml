@page
@using Catalog.Data.Product
@using Catalog.Facade.Product
@using Catalog.Pages.Common.Aids
@using Catalog.Pages.Common.Consts
@using Catalog.Pages.Common.Extensions
@using TestEnvironment.Areas.Products.Pages
@model Catalog.Pages.Products.CatalogPage

@{
    Layout = "_Index";
    var page = Model.PageUrl;
}


<link rel="stylesheet" href="~/css/catalog/catalog.component.css" />




<body>
    <div class="esh-catalog-sidenav">
        @foreach (var basecategory in Model.BaseCategories.Where(x => x.Text is null))
        {
            <button class="esh-catalog-accordion">@Html.DisplayName(Model.CategoryName(basecategory.Value))</button>
            <div class="esh-catalog-panel">
                @foreach (var category in Model.BaseCategories.Where(x => x.Text == basecategory.Value))
                {

                    @Html.DisplayName(Model.CategoryName(category.Value))
                }
            </div>
        }


    </div>
    <script>
        var acc = document.getElementsByClassName("esh-catalog-accordion");
        var i;

        for (i = 0; i < acc.length; i++) {
            acc[i].addEventListener("click", function () {
                /* Toggle between adding and removing the "active" class,
                to highlight the button that controls the panel */
                this.classList.toggle("active");

                /* Toggle between hiding and showing the active panel */
                var panel = this.nextElementSibling;
                if (panel.style.display === "block") {
                    panel.style.display = "none";
                } else {
                    panel.style.display = "block";
                }
            });
        }
    </script>

    <div class="container">
        <div class="navbar-collapse collapse d-sm-inline-flex flex-sm-row-reverse">
            <ul class="navbar-nav flex-grow-1">
                @Html.DropMenu("Sorteeri:",
            new Link(Html.DisplayName("Sorteeri tähestiku järgi"), Model.GetSortString(m => m.Name, page)),
            new Link(Html.DisplayName("Sorteeri koguse järgi"), Model.GetSortString(m => m.Amount, page))
            )
            </ul>
        </div>
    </div>
    <div class="container">
        <component type="typeof(SendBasketItem)" render-mode="ServerPrerendered" />
        <hr />
        @(await Html.RenderComponentAsync<CatalogItems>(RenderMode.ServerPrerendered,new
        {
            Products = new List<ProductTypeView>
            {
                new ProductTypeView {},
                new ProductTypeView {},
                new ProductTypeView {}
            }
        }))
    </div>
    @(await Html.RenderComponentAsync<SendBasketItemBase>(RenderMode.ServerPrerendered))
</body>